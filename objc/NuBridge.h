//
//  NuBridge.h
//  Nu
//
//  Created by Tim Burks on 4/24/16.
//
//

#import <Foundation/Foundation.h>

#import "NuBlock.h"
#import "NuCell.h"

#pragma mark -
#pragma mark Callables: Functions, Macros, Operators

#pragma mark -
#pragma mark Bridging C

/*!
 @class NuBridgedFunction
 @abstract The Nu wrapper for imported C functions.
 @discussion Instances of this class wrap functions imported from C.
 
 Because NuBridgedFunction is a subclass of NuOperator, Nu expressions that
 begin with NuBridgedFunction instances are treated as operator calls.
 
 In general, operators may or may not evaluate their arguments,
 but for NuBridgedFunctions, all arguments are evaluated.
 The resulting values are then passed to the bridged C function
 using the foreign function interface (libFFI).
 
 The C function's return value is converted into a Nu object and returned.
 
 Here is an example showing the use of this class from Nu.
 The example imports and calls the C function <b>NSApplicationMain</b>.
 
 <div style="margin-left:2em;">
 <code>
 (set NSApplicationMain<br/>
 &nbsp;&nbsp;&nbsp;&nbsp;(NuBridgedFunction<br/>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;functionWithName:"NSApplicationMain" <br/>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;signature:"ii^*"))<br/><br/>
 (NSApplicationMain 0 nil)
 </code>
 </div>
 
 The signature string used to create a NuBridgedFunction must be a valid Objective-C type signature.
 In the future, convenience methods may be added to make those signatures easier to generate.
 But in practice, this has not been much of a problem.
 */

#import "NuOperators.h"


@interface NuBridgedFunction : NuOperator

/*! Create a wrapper for a C function with the specified name and signature.
 The function is looked up using the <b>dlsym()</b> function and the wrapper is
 constructed using libFFI. If the result of this method is assigned to a
 symbol, that symbol may be used as the name of the bridged function.
 */
+ (NuBridgedFunction *) functionWithName:(NSString *)name signature:(NSString *)signature;
/*! Initialize a wrapper for a C function with the specified name and signature.
 The function is looked up using the <b>dlsym()</b> function and the wrapper is
 constructed using libFFI. If the result of this method is assigned to a
 symbol, that symbol may be used as the name of the bridged function.
 */
- (NuBridgedFunction *) initWithName:(NSString *)name signature:(NSString *)signature;
/*! Evaluate a bridged function with the specified arguments and context.
 Arguments must be in a Nu list.
 */
- (id) evalWithArguments:(id)arguments context:(NSMutableDictionary *)context;
@end

/*!
 @class NuBridgedConstant
 @abstract The Nu wrapper for imported C constants.
 @discussion This class can be used to import constants defined in C code.
 The signature string used to import a constant must be a valid Objective-C type signature.
 */
@interface NuBridgedConstant : NSObject {}
/*! Look up the value of a constant with specified name and type.
 The function is looked up using the <b>dlsym()</b> function.
 The returned value is of the type specified by the signature argument.
 */
+ (id) constantWithName:(NSString *) name signature:(NSString *) signature;

@end

#ifdef __BLOCKS__
/*!
 @class NuBridgedBlock
 @abstract Generates a C block that wraps a nu block
 @discussion This class makes a C block that wraps a nu block using a supplied
 Objective-C-style function signature. This works by copying a dummy c block and
 then writing over its function pointer with a libFFI-generated closure function.
 */
@interface NuBridgedBlock : NSObject

/*! Returns a C block that wraps the supplied nu block using the supplied
 Objective-C-style function signature.
 */
+(id)cBlockWithNuBlock:(NuBlock*)nb signature:(NSString*)sig;

/*! Initializes a NuBridgedBlock object using a NuBlock and an Objective-C-style
 function signature. A C block is generated during the initialization.
 */
-(id)initWithNuBlock:(NuBlock*)nb signature:(NSString*)sig;

/*! Returns the NuBlock associated with the NuBridgedBlock object.
 */
-(NuBlock*)nuBlock;

/*! Returns the C block generated by the NuBridgedBlock object.
 */
-(id)cBlock;

@end
#endif //__BLOCKS__

#import "NuMethod.h"

#pragma mark -
#pragma mark Interacting with the Objective-C Runtime

#import "NuClass.h"

#if !TARGET_OS_IPHONE
/*!
 @class NuBridgeSupport
 @abstract A reader for Apple's BridgeSupport files.
 @discussion Methods of this class are used to read Apple's BridgeSupport files.
 */
@interface NuBridgeSupport : NSObject
/*! Import a dynamic library at the specified path. */
+ (void)importLibrary:(NSString *) libraryPath;
/*! Import a BridgeSupport description of a framework from a specified path.  Store the results in the specified dictionary. */
+ (void)importFramework:(NSString *) framework fromPath:(NSString *) path intoDictionary:(NSMutableDictionary *) BridgeSupport;

@end
#endif